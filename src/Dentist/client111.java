/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Dentist;
import java.sql.*;
import java.util.Calendar;
import javax.swing.*;
import javax.swing.table.TableModel;
import net.proteanit.sql.DbUtils;
/**
 *
 * @author Aidin
 */
public class client111 extends javax.swing.JInternalFrame {
Connection conn = null;
CallableStatement stored_pro = null;
Statement statement = null;
ResultSet rs = null;
    /**
     * Creates new form client1
     */
    public client111() {
        initComponents();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        SearchTxt = new javax.swing.JTextField();
        back = new javax.swing.JButton();
        MeasureInsertButton = new javax.swing.JButton();
        MeasureUpdateButton = new javax.swing.JButton();
        MeasureDeleteButton = new javax.swing.JButton();
        senatxt = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        pos = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel5 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        IDtxt = new javax.swing.JTextField();
        jButton3 = new javax.swing.JButton();
        Datetxt = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        diagtxt = new javax.swing.JComboBox<>();
        fiotxt = new javax.swing.JComboBox<>();
        doctxt = new javax.swing.JComboBox<>();

        setBorder(null);
        setClosable(true);
        setDefaultCloseOperation(javax.swing.WindowConstants.HIDE_ON_CLOSE);
        setMaximizable(true);
        setResizable(true);
        setTitle("Запись на прием");
        setMaximumSize(new java.awt.Dimension(32767, 32767));
        setMinimumSize(new java.awt.Dimension(0, 0));
        setPreferredSize(new java.awt.Dimension(1000, 650));
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameOpened(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(204, 204, 204));
        jPanel1.setPreferredSize(new java.awt.Dimension(808, 800));

        jButton1.setFont(new java.awt.Font("Comic Sans MS", 0, 12)); // NOI18N
        jButton1.setText("найти");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        jButton2.setIcon(new javax.swing.ImageIcon("C:\\Users\\Aidin\\Downloads\\Employee Payroll\\Employee Payroll\\Icons\\update icon.png")); // NOI18N
        jButton2.setText("список");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        SearchTxt.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                SearchTxtMousePressed(evt);
            }
        });

        back.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        back.setIcon(new javax.swing.ImageIcon("C:\\Users\\Aidin\\Downloads\\Employee Payroll\\Employee Payroll\\Icons\\attach.png")); // NOI18N
        back.setText("назад");
        back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backActionPerformed(evt);
            }
        });

        MeasureInsertButton.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        MeasureInsertButton.setIcon(new javax.swing.ImageIcon("C:\\Users\\Aidin\\Downloads\\Employee Payroll\\Employee Payroll\\Icons\\attachment-512.png")); // NOI18N
        MeasureInsertButton.setText("Добавить");
        MeasureInsertButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MeasureInsertButtonActionPerformed(evt);
            }
        });

        MeasureUpdateButton.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        MeasureUpdateButton.setIcon(new javax.swing.ImageIcon("C:\\Users\\Aidin\\Downloads\\Employee Payroll\\Employee Payroll\\Icons\\Save-icon.png")); // NOI18N
        MeasureUpdateButton.setText("Сохранить");
        MeasureUpdateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MeasureUpdateButtonActionPerformed(evt);
            }
        });

        MeasureDeleteButton.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        MeasureDeleteButton.setIcon(new javax.swing.ImageIcon("C:\\Users\\Aidin\\Downloads\\Employee Payroll\\Employee Payroll\\Icons\\delete_16x16.gif")); // NOI18N
        MeasureDeleteButton.setText("Удалить");
        MeasureDeleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MeasureDeleteButtonActionPerformed(evt);
            }
        });

        senatxt.setToolTipText("");
        senatxt.setEnabled(false);

        jLabel6.setFont(new java.awt.Font("Comic Sans MS", 0, 14)); // NOI18N
        jLabel6.setText("Посещение");

        jLabel4.setFont(new java.awt.Font("Comic Sans MS", 0, 14)); // NOI18N
        jLabel4.setText("Диагноз");

        pos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                posActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Comic Sans MS", 0, 14)); // NOI18N
        jLabel1.setText("Фио");

        jPanel2.setBackground(new java.awt.Color(0, 102, 102));

        jLabel3.setFont(new java.awt.Font("Comic Sans MS", 1, 24)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Запись на Прием");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(276, 276, 276)
                .addComponent(jLabel3)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(27, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addContainerGap())
        );

        jTable1.setFont(new java.awt.Font("Comic Sans MS", 0, 14)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "id", "ФИО", "Диагноз", "Цена", "Посещение", "Дата", "Леч_Врач"
            }
        ));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jLabel5.setFont(new java.awt.Font("Comic Sans MS", 0, 14)); // NOI18N
        jLabel5.setText("Цена за услугу");

        jLabel10.setFont(new java.awt.Font("Comic Sans MS", 0, 14)); // NOI18N
        jLabel10.setText("id");

        IDtxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                IDtxtActionPerformed(evt);
            }
        });

        jButton3.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        jButton3.setIcon(new javax.swing.ImageIcon("C:\\Users\\Aidin\\Downloads\\Employee Payroll\\Employee Payroll\\Icons\\erase-128.png")); // NOI18N
        jButton3.setText("Очистить");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        Datetxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DatetxtActionPerformed(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Comic Sans MS", 0, 14)); // NOI18N
        jLabel11.setText("Дата");

        jLabel12.setFont(new java.awt.Font("Comic Sans MS", 0, 14)); // NOI18N
        jLabel12.setText("Врач");

        fiotxt.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                fiotxtPopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(jScrollPane1))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(SearchTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 575, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(3, 3, 3)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel1)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6)
                            .addComponent(jLabel11)
                            .addComponent(jLabel10)
                            .addComponent(jLabel12))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(Datetxt, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 197, Short.MAX_VALUE)
                                    .addComponent(pos, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(senatxt, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(IDtxt, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(diagtxt, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(fiotxt, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(doctxt, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(MeasureInsertButton, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(MeasureDeleteButton, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(back, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(MeasureUpdateButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10)
                            .addComponent(IDtxt, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(12, 12, 12)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(fiotxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(12, 12, 12)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(diagtxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(10, 10, 10)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(senatxt, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(10, 10, 10)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(pos, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(10, 10, 10)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Datetxt, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel11))
                        .addGap(12, 12, 12)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel12)
                            .addComponent(doctxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(22, 22, 22)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(MeasureUpdateButton)
                            .addComponent(MeasureInsertButton))
                        .addGap(15, 15, 15)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(MeasureDeleteButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(back, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                        .addGap(199, 199, 199))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(SearchTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton1))
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 345, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 1007, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(29, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 577, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 1, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
         // TODO add your handling code here:

        try{
            conn = ConnectMsSql.ConnectDB();

            String perem = SearchTxt.getText();
            String sql = "SELECT [ID]\n" +
"      ,[ФИО]\n" +
"      ,[Диагноз]\n" +
"      ,[Дата]\n" +
"      ,[Цена_за_услугу]\n" +
"      ,[Посещение]\n" +
"      ,[Леч_врач]\n" +
"  FROM Appointment_Doctor where Дата  like '%" + perem + "%'";
            statement = conn.createStatement();
            rs = statement.executeQuery(sql);
            this.jTable1.setModel(DbUtils.resultSetToTableModel(rs));
            jTable1.getColumnModel().getColumn(0).setHeaderValue("Наименование");
            jTable1.getColumnModel().getColumn(1).setHeaderValue("Ед. изм.");
            jTable1.getColumnModel().getColumn(2).setHeaderValue("Сумма");
            jTable1.getColumnModel().getColumn(3).setHeaderValue("Количество");
            jTable1.getColumnModel().getColumn(4).setHeaderValue("Себестоимость");

        }
        catch(Exception e){
            JOptionPane.showMessageDialog(null, "Ошибка, что то пошло не так :(");
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        try{
            conn = ConnectMsSql.ConnectDB();
            String sql = "SELECT\n" +
"     Appointment_Doctor.\"ID\" AS Appointment_Doctor_ID,\n" +
"     Table_client.\"ФИО\" AS Table_client_ФИО,\n" +
"     Table_diagnosis.\"Диагноз\" AS Table_diagnosis_Диагноз,\n" +
"     Appointment_Doctor.\"Цена_за_услугу\" AS Appointment_Doctor_Цена_за_услугу,\n" +
"     Appointment_Doctor.\"Посещение\" AS Appointment_Doctor_Посещение,\n" +
"     Appointment_Doctor.\"Дата\" AS Appointment_Doctor_Дата,\n" +
"     Table_doctor.\"ФИО\" AS Table_doctor_ФИО\n" +
"FROM\n" +
"     \"dbo\".\"Table_client\" Table_client INNER JOIN \"dbo\".\"Appointment_Doctor\" Appointment_Doctor ON Table_client.\"id\" = Appointment_Doctor.\"ФИО\"\n" +
"     INNER JOIN \"dbo\".\"Table_diagnosis\" Table_diagnosis ON Appointment_Doctor.\"Диагноз\" = Table_diagnosis.\"id\"\n" +
"     INNER JOIN \"dbo\".\"Table_doctor\" Table_doctor ON Appointment_Doctor.\"Леч_врач\" = Table_doctor.\"ID\"";
            statement = conn.createStatement();
            rs = statement.executeQuery(sql);
            this.jTable1.setModel(DbUtils.resultSetToTableModel(rs));
            jTable1.getColumnModel().getColumn(0).setHeaderValue("ID");
            jTable1.getColumnModel().getColumn(1).setHeaderValue("ФИО");
            jTable1.getColumnModel().getColumn(2).setHeaderValue("Диагноз");
            jTable1.getColumnModel().getColumn(3).setHeaderValue("Цена_за_услугу");
            jTable1.getColumnModel().getColumn(4).setHeaderValue("Посещение");
            jTable1.getColumnModel().getColumn(5).setHeaderValue("Дата");
            jTable1.getColumnModel().getColumn(6).setHeaderValue("Леч_врач");
            conn.close();
        }

        catch(Exception e){
            e.printStackTrace();
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void SearchTxtMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SearchTxtMousePressed
        // TODO add your handling code here:
    }//GEN-LAST:event_SearchTxtMousePressed

    private void backActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backActionPerformed
        // TODO add your handling code here:
        Main field= new Main();
        field.setVisible(true);
        setVisible(false);
    }//GEN-LAST:event_backActionPerformed

    private void MeasureInsertButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MeasureInsertButtonActionPerformed
        // TODO add your handling code here:
         try{ // conn = ConnectMsSql.ConnectDB();
        Statement st = conn.createStatement();
        String name = fiotxt.getSelectedItem().toString();
        String diag = diagtxt.getSelectedItem().toString();
         String docto = doctxt.getSelectedItem().toString();
int sena = Integer.parseInt(senatxt.getText());
String data=Datetxt.getText();
String poss=pos.getText();
        int idfio = 0;
            ResultSet id1 = st.executeQuery("select id from Table_client where ФИО = '" + name + "'");
            while (id1.next()) {
                idfio = id1.getInt("id");
            }
            int iddiag = 0;
            ResultSet id3 = st.executeQuery("select id from Table_diagnosis where Диагноз = '" + diag + "'");
            while (id3.next()) {
                iddiag = id3.getInt("id");
            }
            int iddoc = 0;
            ResultSet id4 = st.executeQuery("select id from Table_doctor where ФИО = '" + docto + "'");
            while (id4.next()) {
                iddoc = id4.getInt("id");
            }
            stored_pro = conn.prepareCall("{call insert_date_about_zap (?,?,?,?,?,?)}");
            stored_pro.setInt(1, idfio);
             stored_pro.setInt(2, iddiag);
             //stored_pro.setInt(3, 1);
              stored_pro.setString(3, poss);
               stored_pro.setInt(4, 1);
               stored_pro.setInt(5, iddoc);
               
                 stored_pro.setString(6, data);
           
           stored_pro.execute();
            JOptionPane.showMessageDialog(null, "успешно сохранено");
        }catch(Exception e){
            e.printStackTrace();
            JOptionPane.showMessageDialog(null, "Ошибка!!! запишитесь на прием по позже");
        }
        UpdateJTable();
    }//GEN-LAST:event_MeasureInsertButtonActionPerformed

    private void MeasureUpdateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MeasureUpdateButtonActionPerformed
        // TODO add your handling code here:
        // TODO add your handling code here:
        try{
            Statement st = conn.createStatement();
            
        String name = fiotxt.getSelectedItem().toString();
        String diag = diagtxt.getSelectedItem().toString();
         String docto = doctxt.getSelectedItem().toString();
      // int poss = Integer.parseInt(pos.getText());
int sena = Integer.parseInt(senatxt.getText());
//String data = String.parseStr(Datetxt.getText());
String data=Datetxt.getText();
int IDt=IDtxt.getColumns();
String poss=pos.getText();
//
////          // int id2 = Integer.parseInt(IDtxt.getText());
               //  Calendar calendar = Calendar.getInstance();
            //java.sql.Date startDate = new java.sql.Date(calendar.getTime().getTime());
        int idfio = 0;
            ResultSet id1 = st.executeQuery("select id from Table_client where ФИО = '" + name + "'");
            while (id1.next()) {
                idfio = id1.getInt("id");
            }
            int iddiag = 0;
            ResultSet id3 = st.executeQuery("select id from Table_diagnosis where Диагноз = '" + diag + "'");
            while (id3.next()) {
                iddiag = id3.getInt("id");
            }
            int iddoc = 0;
            ResultSet id4 = st.executeQuery("select id from Table_doctor where ФИО = '" + docto + "'");
            while (id4.next()) {
                iddoc = id4.getInt("ID");
            }
            conn = ConnectMsSql.ConnectDB();
            stored_pro = conn.prepareCall("{call update_data_about_Appointment (?,?,?,?,?,?,?)}");
             stored_pro.setInt(1, IDt);
             
            stored_pro.setInt(2, idfio);
             stored_pro.setInt(3, iddiag);
             //stored_pro.setInt(3, 1);
              stored_pro.setString(4, poss);
               stored_pro.setInt(5, 1);
               stored_pro.setInt(6, iddoc);
               
                 stored_pro.setString(7, data);
           
            stored_pro.execute();
            JOptionPane.showMessageDialog(null, "Updated");
        }catch(Exception e){
            e.printStackTrace();
            JOptionPane.showMessageDialog(null, e);
        }
        UpdateJTable();
    }//GEN-LAST:event_MeasureUpdateButtonActionPerformed

    private void MeasureDeleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MeasureDeleteButtonActionPerformed
        // TODO add your handling code here:
        try{
            conn = ConnectMsSql.ConnectDB();
            JFrame frame = new JFrame("Sure");
            if (JOptionPane.showConfirmDialog(frame, "Вы действительно хотите удалить данные?",
                "Удаление данных", JOptionPane.YES_NO_OPTION) == JOptionPane.YES_NO_OPTION)
        {
            stored_pro = conn.prepareCall("{call delete_date_about_Appointment (?)}");
            stored_pro.setString(1, this.IDtxt.getText());
            stored_pro.execute();
            JOptionPane.showMessageDialog(null, "Данные успешно удалены.");
//            Number.setText("");
//            Name.setText("");
            IDtxt.setText("");
            pos.setText("");
            //addres.setText("");
            pos.setText("");
           // Password.setText("");
            senatxt.setText("");
           // Login1.setText("");
           // doctortxt.setText("");
            Datetxt.setText("");
        }

        }
        catch(Exception e){
            JOptionPane.showMessageDialog(null, "Ошибка, что то пошло не так :(");
        }
    }//GEN-LAST:event_MeasureDeleteButtonActionPerformed

    private void posActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_posActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_posActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        // TODO add your handling code here:
//        try{
//            conn = ConnectMsSql.ConnectDB();
//
//            int row = jTable1.getSelectedRow();
//            String name = (jTable1.getModel().getValueAt(row,0).toString());
//
//            String sql = "SELECT [ФИО]\n" +
//"      ,[Диагноз]\n" +
//"      ,[Дата]\n" +
//"      ,[Цена_за_услугу]\n" +
//"      ,[Посещение]\n" +
//"      ,[Леч_врач]\n" +
//"  FROM Appointment_Doctor where ФИО ='" + name + "'";
//            PreparedStatement pst=conn.prepareStatement(sql);
//            ResultSet rs = pst.executeQuery();
//            statement = conn.createStatement();
//            rs = statement.executeQuery(sql);
//
//            while(rs.next()){
////                doctortxt.setText(rs.getString("Леч_Врач"));
//               IDtxt.setText(rs.getString("id"));
//                Name.setText(rs.getString("ФИО"));
//                //addres.setText(rs.getString("Посещение_клиента"));
//                Number.setText(rs.getString("Диагноз"));
//                Login.setText(rs.getString("Дата"));
//                Email.setText(rs.getString("Цена_за_услугу"));
////                Password.setText(rs.getString("Диагноз_клиента"));
////                Login1.setText(rs.getString("Цена"));
//                Datetxt.setText(rs.getString("Посещение"));
//                Datetxt1.setText(rs.getString("Леч_врач"));
//            }
//
//        }
//        catch(Exception e){
//            System.out.println("Error");
//        }


int i=jTable1.getSelectedRow();
        TableModel model=jTable1.getModel();
     IDtxt.setText(model.getValueAt(i,0).toString());
fiotxt.setSelectedItem(model.getValueAt(i,1).toString());
diagtxt.setSelectedItem(model.getValueAt(i,2).toString());
    senatxt.setText(model.getValueAt(i,3).toString());
    pos.setText(model.getValueAt(i,4).toString());
    Datetxt.setText(model.getValueAt(i,5).toString());
    doctxt.setSelectedItem(model.getValueAt(i,6).toString());
    }//GEN-LAST:event_jTable1MouseClicked

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
//        Number.setText("");
//        Name.setText("");
        IDtxt.setText("");
        pos.setText("");
       // addres.setText("");
        pos.setText("");
      //  Password.setText("");
        senatxt.setText("");
      //  Login1.setText("");
       // doctortxt.setText("");
    }//GEN-LAST:event_jButton3ActionPerformed

    private void DatetxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DatetxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_DatetxtActionPerformed

    private void IDtxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_IDtxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_IDtxtActionPerformed

    private void fiotxtPopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_fiotxtPopupMenuWillBecomeInvisible
        // TODO add your handling code here:
        String tmp=(String)fiotxt.getSelectedItem();
         String sql = "SELECT\n" +
"     Appointment_Doctor.\"ID\" AS Appointment_Doctor_ID,\n" +
"     Table_client.\"ФИО\" AS Table_client_ФИО,\n" +
"     Table_diagnosis.\"Диагноз\" AS Table_diagnosis_Диагноз,\n" +
"     Appointment_Doctor.\"Цена_за_услугу\" AS Appointment_Doctor_Цена_за_услугу,\n" +
"     Appointment_Doctor.\"Посещение\" AS Appointment_Doctor_Посещение,\n" +
"     Appointment_Doctor.\"Дата\" AS Appointment_Doctor_Дата,\n" +
"     Table_doctor.\"ФИО\" AS Table_doctor_ФИО\n" +
"FROM\n" +
"     \"dbo\".\"Table_client\" Table_client INNER JOIN \"dbo\".\"Appointment_Doctor\" Appointment_Doctor ON Table_client.\"id\" = Appointment_Doctor.\"ФИО\"\n" +
"     INNER JOIN \"dbo\".\"Table_diagnosis\" Table_diagnosis ON Appointment_Doctor.\"Диагноз\" = Table_diagnosis.\"id\"\n" +
"     INNER JOIN \"dbo\".\"Table_doctor\" Table_doctor ON Appointment_Doctor.\"Леч_врач\" = Table_doctor.\"ID\" where Table_client.ФИО=?";
           
//        try {
//            
//             //String sql = "SELECT RawMaterials.Naimenovaniye_Syrya, Ingridients.Kol_Syrya_prod FROM Ingridients INNER JOIN RawMaterials ON Ingridients.RawMaterials = RawMaterials.ID WHERE Ingridients.RawMaterials ='" + ID + "'";
//             PreparedStatement pst = conn.prepareStatement(sql);
//            pst.setString(1,tmp);
//            rs=pst.executeQuery();
//            
//            while (rs.next()) {
//              String add1= rs.getString("Naimenovaniye_Syrya");
//              IDTxt.setText(add1);
//              String add2=(rs.getString("Kol_Syrya_prod"));
//               // MeasureTxt.setText(rs.getString("meas"));
//               AmountTxt.setText(add2);
//            }
//
//        } catch (Exception e) {
//            System.out.println("Error");
//        }
    }//GEN-LAST:event_fiotxtPopupMenuWillBecomeInvisible

    private void Fillcombo(){
        try{
            conn=ConnectMsSql.ConnectDB();
            String sql="SELECT  ФИО,Возраст,Адрес,Номер_телефона,Дата FROM Table_client";
            statement = conn.createStatement();
            rs = statement.executeQuery(sql);
            while(rs.next()){
            String nme=rs.getString("ФИО");
            this.fiotxt.addItem(nme);
            }
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(null, "Ошибка, что то пошло не так");
        }
}
    
     private void Fillcombodiag(){
        try{
            conn=ConnectMsSql.ConnectDB();
            String sql="SELECT  [id]\n" +
"      ,[Диагноз]\n" +
"      ,[Цена]\n" +
"  FROM Table_diagnosis";
            statement = conn.createStatement();
            rs = statement.executeQuery(sql);
            while(rs.next()){
            String nme=rs.getString("Диагноз");
            this.diagtxt.addItem(nme);
            }
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(null, "Ошибка, что то пошло не так");
        }
}
    
     private void Fillcombodoctor(){
        try{
            conn=ConnectMsSql.ConnectDB();
            String sql="SELECT  [ID]\n" +
"      ,[ФИО]\n" +
"      ,[Адрес]\n" +
"      ,[Номер]\n" +
"      ,[Email]\n" +
"      ,[Password]\n" +
"      ,[Login]\n" +
"      ,[Position]\n" +
"  FROM Table_doctor";
            statement = conn.createStatement();
            rs = statement.executeQuery(sql);
            while(rs.next()){
            String nme=rs.getString("ФИО");
            this.doctxt.addItem(nme);
            }
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(null, "Ошибка, что то пошло не так");
        }
}
    private void formInternalFrameOpened(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameOpened
        // TODO add your handling code here:
        Fillcombo();
        Fillcombodiag();
        Fillcombodoctor();
    }//GEN-LAST:event_formInternalFrameOpened

    private void UpdateJTable(){
        try{
            conn = ConnectMsSql.ConnectDB();
            String sql = "SELECT TOP [ФИО]\n" +
"      ,[Диагноз]\n" +
"      ,[Дата]\n" +
"      ,[Цена_за_услугу]\n" +
"      ,[Посещение]\n" +
"      ,[Леч_врач]\n" +
"  FROM Appointment_Doctor";
            statement = conn.createStatement();
            rs = statement.executeQuery(sql);
            this.jTable1.setModel(DbUtils.resultSetToTableModel(rs));
        }
        catch(Exception e){
            e.printStackTrace();
        }
    }
    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField Datetxt;
    private javax.swing.JTextField IDtxt;
    private javax.swing.JButton MeasureDeleteButton;
    private javax.swing.JButton MeasureInsertButton;
    private javax.swing.JButton MeasureUpdateButton;
    private javax.swing.JTextField SearchTxt;
    private javax.swing.JButton back;
    private javax.swing.JComboBox<String> diagtxt;
    private javax.swing.JComboBox<String> doctxt;
    private javax.swing.JComboBox<String> fiotxt;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField pos;
    private javax.swing.JTextField senatxt;
    // End of variables declaration//GEN-END:variables
}
